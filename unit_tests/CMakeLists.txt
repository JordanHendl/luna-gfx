add_subdirectory(test_shaders)

macro(AddTest test_file)
  get_filename_component(test_name ${test_file} NAME_WLE)
  add_executable(${test_name} ${test_file})
  target_link_libraries(${test_name} GTest::GTest luna_gfx)
  target_include_directories(${test_name} PUBLIC ${SHADER_DIR})
  # Instead of knowing what each test uses for shaders, we just wait for all shaders to compile before compiling tests.
  add_dependencies(${test_name} shader_compilation)
  add_test(NAME ${test_name} COMMAND ${test_name})
endmacro()

if(BuildTests)
find_package(GTest REQUIRED)
if(GTest_FOUND)
  set(luna_gfx_libs luna_gfx)
  AddTest(test_common.cpp)
  AddTest(test_vulkan_wrappers.cpp)
  AddTest(test_vulkan_utils.cpp)
  AddTest(test_interface.cpp)
  AddTest(test_extension.cpp)
endif()

find_package(Threads)
add_executable(luna_cube luna_cube_test.cpp)
target_link_libraries(luna_cube luna_gfx Threads::Threads)
target_include_directories(luna_cube PUBLIC ${SHADER_DIR})
endif()